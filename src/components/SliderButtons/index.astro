---
import './styles.css'
import FloatingButton from '../FloatingButton/index.astro'
import { FiChevronLeft, FiChevronRight } from 'react-icons/fi'

const buttons = [
  {
    className: 'left',
    icon: FiChevronLeft
  },
  {
    className: 'right',
    icon: FiChevronRight
  }
]
---

<>
  {
    buttons.map((button) => (
      <FloatingButton className={`slider-button ${button.className}`}>
        <button.icon />
      </FloatingButton>
    ))
  }
</>

<script>
  const sliders = document.querySelectorAll(
    '.slider'
  ) as NodeListOf<HTMLElement>

  const handleArrowClick = (
    slider: HTMLElement,
    direction: 'left' | 'right'
  ) => {
    const { clientWidth, scrollLeft } = slider

    const move = direction === 'left' ? -clientWidth : clientWidth
    slider.scrollTo({ left: scrollLeft + move, behavior: 'smooth' })
  }

  const handleDisablingButtons = (
    slider: HTMLElement,
    leftButton: HTMLButtonElement,
    rightButton: HTMLButtonElement
  ) => {
    const { clientWidth, scrollLeft, scrollWidth } = slider

    leftButton.disabled = scrollLeft === 0
    rightButton.disabled = scrollLeft + clientWidth >= scrollWidth
  }

  const initializeSlider = (slider: HTMLElement) => {
    const { parentElement } = slider

    if (!parentElement) return

    const leftButton = parentElement.querySelector(
      '.slider-button.left'
    ) as HTMLButtonElement
    const rightButton = parentElement.querySelector(
      '.slider-button.right'
    ) as HTMLButtonElement

    leftButton.addEventListener('click', () => handleArrowClick(slider, 'left'))
    rightButton.addEventListener('click', () =>
      handleArrowClick(slider, 'right')
    )
    
    slider.addEventListener('scroll', () =>
      handleDisablingButtons(slider, leftButton, rightButton)
    )

    handleDisablingButtons(slider, leftButton, rightButton)
  }

  const observer = new MutationObserver(() => {
    sliders.forEach(initializeSlider)
  })

  observer.observe(document.body, {
    attributes: true,
    childList: true,
    subtree: true,
    attributeFilter: ['style']
  })

  sliders.forEach(initializeSlider)
</script>
